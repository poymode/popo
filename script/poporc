#!/usr/bin/env bash
if [[ -z "$popo_path" ]] ; then
  echo "FAIL Please set the popo_path environment var"
  exit -1
fi

if [[ -z "$popo_target" ]] ; then
  echo "FAIL Please set the popo_target environment var"
  exit -1
fi

YELLOW="\[\033[33m\]"
NORMAL="\[\033[0;0m\]"
BASEPATH=`which basename`
BASENAME=`$BASEPATH $popo_path`
CUSTOMRC=$popo_path/.manifest/script/customrc

export rvm_prefix=$popo_path
unset $(env | awk -F= '/^rvm_/{print $1" "}')
export rvm_path=$popo_path/rvm
source $rvm_path/scripts/rvm
source $rvm_path/contrib/ps1_functions
rubies_path=$rvm_path/rubies

# Load default rvm if rubies folder is not empty
if [ -d $rubies_path ] && [ "$(ls -A $rubies_path)" ] ; then
  rvm default
fi

unset PALMADE_GEMS_DIR
export PATH="$rvm_path/bin:$popo_path/tools:$PATH"

if [[ $PS1 != "" ]] ; then
  if [[ -f /etc/bash.bashrc ]] ; then
    source /etc/bash.bashrc
  fi

  if [[ -f $HOME/.bashrc ]] ; then
    source $HOME/.bashrc
  fi

  if [[ $BASENAME != $popo_target ]] ; then
    export PS1="$YELLOW(popo $popo_target/$BASENAME) $NORMAL$PS1"
  else
    export PS1="$YELLOW(popo $popo_target) $NORMAL$PS1"
  fi
fi

rvm reload

if [[ -z "$PS1" ]] ; then
	rvm $*
else
    echo "Welcome to the popoed environment, where you can play with your very own popo."
    echo ""
    echo "Popo has set these variables for you lazy ass people".
    echo "  popo_path:   $popo_path"
    echo "  popo_target: $popo_target"
    echo ""
    echo "Remember to keep things clean and civil around here."
    echo "To go back to your normal world, just hit exit."
    echo ""
    echo "But wait, you ask, who needs popo? Baahh, popo's for n00bs!"
    echo ""
fi

# source a custom rc file
if [[ -s $CUSTOMRC ]] ; then
  source $CUSTOMRC
fi
