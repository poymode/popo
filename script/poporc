#!/usr/bin/env bash

if [[ -z "$popo_path" ]] ; then
    echo "FAIL Please set the popo_path environment var"
    exit -1
fi

if [[ -z "$popo_target" ]] ; then
    echo "FAIL Please set the popo_target environment var"
    exit -1
fi

SHIT="\[\033[33m\]"
NORMAL="\[\033[0;0m\]"
BASEPATH=`which basename`
BASENAME=`$BASEPATH $popo_path`

if [[ $PS1 != "" ]] ; then
    if [[ -f /etc/bash.bashrc ]] ; then
        source /etc/bash.bashrc
    fi

    if [[ -f $HOME/.bashrc ]] ; then
        source $HOME/.bashrc
    fi

    if [[ $BASENAME != $popo_target ]] ; then
        export PS1="$SHIT(popo $popo_target/$BASENAME) $NORMAL$PS1"
    else
        export PS1="$SHIT(popo $popo_target) $NORMAL$PS1"
    fi
fi

# Let's unload system installed rvm and move path prefix to popo
unset $(env | awk -F= '/^rvm_/{print $1" "}')
export rvm_reload_flag=1
export rvm_prefix=$popo_path
export rvm_path=$popo_path/rvm
export CABLING_PATH=$popo_path/.popo/cabling.yml
export CABLING_TARGET=$popo_target

# Now let's load rvm inside popo
source $rvm_prefix/rvm/scripts/rvm

# Load default rvm
rvm default 1>/dev/null 2>&1
unset PALMADE_GEMS_DIR
export PATH="$popo_path/rvm/bin:$popo_path/tools:$PATH"


if [[ -z "$PS1" ]] ; then
	rvm $*
else
    echo ""
    echo "Welcome to the popoed bash environment, where you can play with your very own popo."
    echo ""
    echo "  popo path: $popo_path"
    echo "  popo target: $popo_target"
    echo ""
    echo "Remember to keep things clean and civil around here."
    echo "To go back to your normal world, just hit exit."
    echo ""
    echo "But wait, you ask, who needs popo? Baahh, popo's for n00bs!"
    echo ""
fi
